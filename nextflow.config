params {
    // Input file
    input                   = null

    // database directory
    db_dir                  = null

    // Databases are expected to be organized in subdirectories in the db_dir.
    // We also expect the references necessary for preprocessing to be in th
    // metagenlab_wgs_pipeline subdirectory
    phanta_db               = "$params.db_dir/phanta/uhggv2_mgv/"
    motus_db                = "$params.db_dir/db_mOTU/"
    metaeuk_db              = "$params.db_dir/MicroEuk_v3/MicroEuk90.faa.gz"
    eggnog_dbdir            = "$params.db_dir/eggnog/"
    eggnog_db               = "$params.eggnog_dbdir/eggnog.db"
    eggnog_dmnd             = "$params.eggnog_dbdir/eggnog_proteins.dmnd"
    reference_dir           = "$params.db_dir/metagenlab_wgs_pipeline"
    references.phix         = "$params.reference_dir/phix174_ill.ref.fa.gz"
    references.adapters     = "$params.reference_dir/adapters.fa"
    references.masked_human = "$params.reference_dir/hg19_main_mask_ribo_animal_allplant_allfungus.fa.gz"

    // These are the paths to phanta and 4CAC repositories. They only need
    // to be modified if not running the pipeline with containers.
    phanta_dir              = "/pkg/phanta"
    fourcac_dir             = "/pkg/4CAC/"

    // Pipeline execution options
    skip_phanta             = false
    skip_motus              = false
    skip_assembly           = false      // will also skip gene calling, counting and annotation
    skip_gene_catalog       = false  // do not make the gene catalog
    skip_per_sample         = true     // do not call, count and annotate genes per sample

    // Output options
    outdir                  = "output"
    publish_dir_mode        = 'copy'

    // Control which files get stored in outdir
    publish {
        preprocessed_reads  = true
        assemblies          = true
        taxonomic_profiling = true
        gene_catalog        = true
    }
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda', 'defaults']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
}

// Set default registry for Apptainer, Docker, Podman and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry   = 'quay.io'
docker.registry      = 'quay.io'
singularity.registry = 'quay.io'

// Nextflow plugins
plugins {

}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'metagenomics'
    author          = """Niklaus Johner"""
    homePage        = 'https://github.com/metagenlab/scripts'
    description     = """Pipeline to analyse metagenomics data, including preprocessing, taxonomic profiling, assembly and functional annotation"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=23.04.0'
    version         = '1.0dev'
    doi             = ''
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
