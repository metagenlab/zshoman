{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/metagenomics/master/nextflow_schema.json",
    "title": "metagenomics pipeline parameters",
    "description": "Pipeline to analyse metagenomics data, including preprocessing, taxonomic profiling, assembly and functional annotation",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": [
                "input",
                "outdir"
            ],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open",
                    "default": "output"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "move"
                    ],
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ],
    "properties": {
        "db_dir": {
            "type": "string",
            "format": "directory-path"
        },
        "phanta_db": {
            "type": "string",
            "default": "null/phanta/uhggv2_mgv/"
        },
        "motus_db": {
            "type": "string",
            "default": "null/db_mOTU/"
        },
        "metaeuk_db": {
            "type": "string",
            "default": "null/MicroEuk_v3/MicroEuk90.faa.gz",
            "format": "file-path"
        },
        "eggnog_dbdir": {
            "type": "string",
            "default": "null/eggnog/",
            "format": "directory-path"
        },
        "eggnog_db": {
            "type": "string",
            "default": "null/eggnog//eggnog.db",
            "format": "file-path"
        },
        "eggnog_dmnd": {
            "type": "string",
            "default": "null/eggnog//eggnog_proteins.dmnd",
            "format": "file-path"
        },
        "reference_dir": {
            "type": "string",
            "default": "null/metagenlab_wgs_pipeline"
        },
        "adapters": {
            "type": "string",
            "default": "null/metagenlab_wgs_pipeline/adapters.fa",
            "format": "file-path"
        },
        "phix": {
            "type": "string",
            "default": "null/metagenlab_wgs_pipeline/phix174_ill.ref.fa.gz",
            "format": "file-path"
        },
        "masked_human": {
            "type": "string",
            "default": "null/metagenlab_wgs_pipeline/hg19_main_mask_ribo_animal_allplant_allfungus.fa.gz",
            "format": "file-path"
        },
        "phanta_dir": {
            "type": "string",
            "default": "/pkg/phanta"
        },
        "fourcac_dir": {
            "type": "string",
            "default": "/pkg/4CAC/"
        },
        "skip_phanta": {
            "type": "boolean"
        },
        "skip_motus": {
            "type": "boolean"
        },
        "skip_assembly": {
            "type": "boolean"
        },
        "skip_gene_catalog": {
            "type": "boolean"
        },
        "skip_per_sample": {
            "type": "boolean",
            "default": true
        }
    },
    "required": [
        "db_dir",
        "metaeuk_db",
        "eggnog_dbdir",
        "eggnog_db",
        "eggnog_dmnd",
        "adapters",
        "phix",
        "masked_human"
    ]
}
